//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Code/Inputs/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Default Gameplay"",
            ""id"": ""e31b467e-3246-49b6-8131-29437293ab10"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""9b389a92-3ab2-4d7e-9e2c-1fed2d4a06d8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Screenshot"",
                    ""type"": ""Button"",
                    ""id"": ""01783086-17fa-414d-a64c-b504724337ce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Character Panel"",
                    ""type"": ""Button"",
                    ""id"": ""d1ce5986-2330-43cc-b89c-1290db9e51b9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mastery Panel"",
                    ""type"": ""Button"",
                    ""id"": ""11e4e300-54b0-43cc-98a6-f30efde69d6f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell Book Panel"",
                    ""type"": ""Button"",
                    ""id"": ""d8028f17-fae9-450f-bee9-43db9e94cc46"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Challenges Panel"",
                    ""type"": ""Button"",
                    ""id"": ""1294e920-1872-4350-b96b-e8ce15936dd8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Leaderboards Panel"",
                    ""type"": ""Button"",
                    ""id"": ""b9ec1b17-af05-44d1-8680-844e381275aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Help Panel"",
                    ""type"": ""Button"",
                    ""id"": ""493b9b97-f195-4bd7-9b0f-160cd029032b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Options Panel"",
                    ""type"": ""Button"",
                    ""id"": ""98890e72-8198-4d93-8944-ca07efc8c728"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""7e0100c6-2248-4001-98dd-ab40f06e9f14"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""20b86ab1-e50e-488d-a4b4-6e239c591094"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1b212837-3013-400c-be84-6a49f5e5d39d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""06f4ca94-95fa-4aea-b9ab-05b8c6eb8139"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""aa9a1b8b-ec5c-425f-b06d-e7d39688eafc"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""80e1e656-92e6-4bc0-b505-12fb87d0978f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrow Keys"",
                    ""id"": ""1902c0fe-55e9-48d1-87d1-63a59040593e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""cfe07a4e-d119-452a-980e-7d16bcab4708"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b8eb9f0d-5efd-401c-8036-6f958ec93027"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f77cc397-9a4c-492e-acd8-87f361e320eb"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8a773eac-cb39-4b12-81eb-c47124f5a08d"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""49b058eb-bd5d-4479-92bb-c6cee77e4554"",
                    ""path"": ""<Keyboard>/printScreen"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Screenshot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d77b6ca-eaf1-4de8-88be-fdf3cf1487fa"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mastery Panel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05c5e539-db3f-4fbb-989f-58f595ebd17c"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0298d3de-3b44-437c-b39c-dcf534a76e69"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Leaderboards Panel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7719e359-4cfe-44ee-9911-431dc65977ff"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Options Panel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cff12cee-a88d-4548-a89b-1f4b6be069c2"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spell Book Panel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3d94e91-816d-4176-8ec2-ee591ce49d28"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Character Panel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""12d76fb9-a86d-47ec-a26f-f91f43443588"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Challenges Panel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e7e2c13-ea05-45aa-80e1-fe6357ee90df"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Help Panel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Default Gameplay
        m_DefaultGameplay = asset.FindActionMap("Default Gameplay", throwIfNotFound: true);
        m_DefaultGameplay_Move = m_DefaultGameplay.FindAction("Move", throwIfNotFound: true);
        m_DefaultGameplay_Screenshot = m_DefaultGameplay.FindAction("Screenshot", throwIfNotFound: true);
        m_DefaultGameplay_CharacterPanel = m_DefaultGameplay.FindAction("Character Panel", throwIfNotFound: true);
        m_DefaultGameplay_MasteryPanel = m_DefaultGameplay.FindAction("Mastery Panel", throwIfNotFound: true);
        m_DefaultGameplay_SpellBookPanel = m_DefaultGameplay.FindAction("Spell Book Panel", throwIfNotFound: true);
        m_DefaultGameplay_ChallengesPanel = m_DefaultGameplay.FindAction("Challenges Panel", throwIfNotFound: true);
        m_DefaultGameplay_LeaderboardsPanel = m_DefaultGameplay.FindAction("Leaderboards Panel", throwIfNotFound: true);
        m_DefaultGameplay_HelpPanel = m_DefaultGameplay.FindAction("Help Panel", throwIfNotFound: true);
        m_DefaultGameplay_OptionsPanel = m_DefaultGameplay.FindAction("Options Panel", throwIfNotFound: true);
        m_DefaultGameplay_Escape = m_DefaultGameplay.FindAction("Escape", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Default Gameplay
    private readonly InputActionMap m_DefaultGameplay;
    private List<IDefaultGameplayActions> m_DefaultGameplayActionsCallbackInterfaces = new List<IDefaultGameplayActions>();
    private readonly InputAction m_DefaultGameplay_Move;
    private readonly InputAction m_DefaultGameplay_Screenshot;
    private readonly InputAction m_DefaultGameplay_CharacterPanel;
    private readonly InputAction m_DefaultGameplay_MasteryPanel;
    private readonly InputAction m_DefaultGameplay_SpellBookPanel;
    private readonly InputAction m_DefaultGameplay_ChallengesPanel;
    private readonly InputAction m_DefaultGameplay_LeaderboardsPanel;
    private readonly InputAction m_DefaultGameplay_HelpPanel;
    private readonly InputAction m_DefaultGameplay_OptionsPanel;
    private readonly InputAction m_DefaultGameplay_Escape;
    public struct DefaultGameplayActions
    {
        private @PlayerInputActions m_Wrapper;
        public DefaultGameplayActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_DefaultGameplay_Move;
        public InputAction @Screenshot => m_Wrapper.m_DefaultGameplay_Screenshot;
        public InputAction @CharacterPanel => m_Wrapper.m_DefaultGameplay_CharacterPanel;
        public InputAction @MasteryPanel => m_Wrapper.m_DefaultGameplay_MasteryPanel;
        public InputAction @SpellBookPanel => m_Wrapper.m_DefaultGameplay_SpellBookPanel;
        public InputAction @ChallengesPanel => m_Wrapper.m_DefaultGameplay_ChallengesPanel;
        public InputAction @LeaderboardsPanel => m_Wrapper.m_DefaultGameplay_LeaderboardsPanel;
        public InputAction @HelpPanel => m_Wrapper.m_DefaultGameplay_HelpPanel;
        public InputAction @OptionsPanel => m_Wrapper.m_DefaultGameplay_OptionsPanel;
        public InputAction @Escape => m_Wrapper.m_DefaultGameplay_Escape;
        public InputActionMap Get() { return m_Wrapper.m_DefaultGameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DefaultGameplayActions set) { return set.Get(); }
        public void AddCallbacks(IDefaultGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_DefaultGameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DefaultGameplayActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Screenshot.started += instance.OnScreenshot;
            @Screenshot.performed += instance.OnScreenshot;
            @Screenshot.canceled += instance.OnScreenshot;
            @CharacterPanel.started += instance.OnCharacterPanel;
            @CharacterPanel.performed += instance.OnCharacterPanel;
            @CharacterPanel.canceled += instance.OnCharacterPanel;
            @MasteryPanel.started += instance.OnMasteryPanel;
            @MasteryPanel.performed += instance.OnMasteryPanel;
            @MasteryPanel.canceled += instance.OnMasteryPanel;
            @SpellBookPanel.started += instance.OnSpellBookPanel;
            @SpellBookPanel.performed += instance.OnSpellBookPanel;
            @SpellBookPanel.canceled += instance.OnSpellBookPanel;
            @ChallengesPanel.started += instance.OnChallengesPanel;
            @ChallengesPanel.performed += instance.OnChallengesPanel;
            @ChallengesPanel.canceled += instance.OnChallengesPanel;
            @LeaderboardsPanel.started += instance.OnLeaderboardsPanel;
            @LeaderboardsPanel.performed += instance.OnLeaderboardsPanel;
            @LeaderboardsPanel.canceled += instance.OnLeaderboardsPanel;
            @HelpPanel.started += instance.OnHelpPanel;
            @HelpPanel.performed += instance.OnHelpPanel;
            @HelpPanel.canceled += instance.OnHelpPanel;
            @OptionsPanel.started += instance.OnOptionsPanel;
            @OptionsPanel.performed += instance.OnOptionsPanel;
            @OptionsPanel.canceled += instance.OnOptionsPanel;
            @Escape.started += instance.OnEscape;
            @Escape.performed += instance.OnEscape;
            @Escape.canceled += instance.OnEscape;
        }

        private void UnregisterCallbacks(IDefaultGameplayActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Screenshot.started -= instance.OnScreenshot;
            @Screenshot.performed -= instance.OnScreenshot;
            @Screenshot.canceled -= instance.OnScreenshot;
            @CharacterPanel.started -= instance.OnCharacterPanel;
            @CharacterPanel.performed -= instance.OnCharacterPanel;
            @CharacterPanel.canceled -= instance.OnCharacterPanel;
            @MasteryPanel.started -= instance.OnMasteryPanel;
            @MasteryPanel.performed -= instance.OnMasteryPanel;
            @MasteryPanel.canceled -= instance.OnMasteryPanel;
            @SpellBookPanel.started -= instance.OnSpellBookPanel;
            @SpellBookPanel.performed -= instance.OnSpellBookPanel;
            @SpellBookPanel.canceled -= instance.OnSpellBookPanel;
            @ChallengesPanel.started -= instance.OnChallengesPanel;
            @ChallengesPanel.performed -= instance.OnChallengesPanel;
            @ChallengesPanel.canceled -= instance.OnChallengesPanel;
            @LeaderboardsPanel.started -= instance.OnLeaderboardsPanel;
            @LeaderboardsPanel.performed -= instance.OnLeaderboardsPanel;
            @LeaderboardsPanel.canceled -= instance.OnLeaderboardsPanel;
            @HelpPanel.started -= instance.OnHelpPanel;
            @HelpPanel.performed -= instance.OnHelpPanel;
            @HelpPanel.canceled -= instance.OnHelpPanel;
            @OptionsPanel.started -= instance.OnOptionsPanel;
            @OptionsPanel.performed -= instance.OnOptionsPanel;
            @OptionsPanel.canceled -= instance.OnOptionsPanel;
            @Escape.started -= instance.OnEscape;
            @Escape.performed -= instance.OnEscape;
            @Escape.canceled -= instance.OnEscape;
        }

        public void RemoveCallbacks(IDefaultGameplayActions instance)
        {
            if (m_Wrapper.m_DefaultGameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDefaultGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_DefaultGameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DefaultGameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DefaultGameplayActions @DefaultGameplay => new DefaultGameplayActions(this);
    public interface IDefaultGameplayActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnScreenshot(InputAction.CallbackContext context);
        void OnCharacterPanel(InputAction.CallbackContext context);
        void OnMasteryPanel(InputAction.CallbackContext context);
        void OnSpellBookPanel(InputAction.CallbackContext context);
        void OnChallengesPanel(InputAction.CallbackContext context);
        void OnLeaderboardsPanel(InputAction.CallbackContext context);
        void OnHelpPanel(InputAction.CallbackContext context);
        void OnOptionsPanel(InputAction.CallbackContext context);
        void OnEscape(InputAction.CallbackContext context);
    }
}
